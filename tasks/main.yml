- name: 'install zookeeper'
  ansible.builtin.yum:
    name: zookeeper-server
    state: latest

- name: Write myid file.
  ansible.builtin.template:
    src: myid.j2
    dest: "{{ zookeeper_data_dir }}/myid"
    owner: zookeeper
    group: zookeeper
    force: "{{ zookeeper_force_myid }}"
  notify:
    - Restart zookeeper

- name: create version-2 directory
  ansible.builtin.file:
    path: "{{ zookeeper_data_dir }}/version-2"
    state: directory
    recurse: yes
    owner: zookeeper
    group: zookeeper

- name: create version-2 log directory
  ansible.builtin.file:
    path: "{{ zookeeper_log_dir }}/version-2"
    state: directory
    recurse: yes
    owner: zookeeper
    group: zookeeper

- name: Configure zookeeper zoo.cfg
  ansible.builtin.template:
    src: zoo.cfg.j2
    dest: "{{ zookeeper_conf_dir }}/conf/zoo.cfg"
  notify:
    - Restart zookeeper

- name: copy java.env
  ansible.builtin.template:
    src: java.env.j2
    dest: "{{ zookeeper_conf_dir }}/java.env"
    owner: zookeeper
    group: zookeeper
  notify:
    - Restart zookeeper

- name: copy zookeeper-env.sh
  ansible.builtin.template:
    src: zookeeper-env.sh.j2
    dest: "{{ zookeeper_conf_dir }}/zookeeper-env.sh"
    owner: zookeeper
    group: zookeeper
  notify:
    - Restart zookeeper

- name: Enable Zookeeper
  ansible.builtin.systemd:
    name: zookeeper-server
    state: restarted
    enabled: yes
